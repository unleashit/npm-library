"use strict";(self.webpackChunk_unleashit_docs=self.webpackChunk_unleashit_docs||[]).push([[521],{6229:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>x,frontMatter:()=>m,metadata:()=>p,toc:()=>h});var a=o(5723),t=o(1373),l=o(6196),s=o(7867),i=o(6810),r=o(4950),d=o(6132);const m={title:"Modal",description:"Customizable React modal component"},c=void 0,p={id:"components/modal",title:"Modal",description:"Customizable React modal component",source:"@site/docs/components/modal.mdx",sourceDirName:"components",slug:"/components/modal",permalink:"/npm-library/components/modal",draft:!1,unlisted:!1,editUrl:"https://github.com/unleashit/npm-library/tree/master/shared/docs/docs/components/modal.mdx",tags:[],version:"current",frontMatter:{title:"Modal",description:"Customizable React modal component"},sidebar:"tutorialSidebar",previous:{title:"Login",permalink:"/npm-library/components/login"},next:{title:"Navigation",permalink:"/npm-library/components/navigation"}},u={},h=[{value:"Features",id:"features",level:3},{value:"Demo",id:"demo",level:3},{value:"Install",id:"install",level:3},{value:"Example",id:"example",level:3},{value:"CSS",id:"css",level:3},...i.RM,{value:"CSS Custom Properties",id:"css-custom-properties",level:3},...r.RM,{value:"Dark mode",id:"dark-mode",level:3},...d.RM,{value:"API",id:"api",level:3}];function g(e){const n={a:"a",code:"code",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Customizable React modal component. Optional animation support when adding/removing from DOM."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://raw.githubusercontent.com/unleashit/npm-library/master/packages/modal/modal.png",alt:"modal component"})}),"\n",(0,a.jsx)(n.h3,{id:"features",children:"Features"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Lightweight modal component."}),"\n",(0,a.jsx)(n.li,{children:"Animation support: optionally adds animation classes when adding/removing from DOM."}),"\n",(0,a.jsx)(n.li,{children:"Custom header and/or footer."}),"\n",(0,a.jsx)(n.li,{children:"Portal free. Detects the highest z-index to place modal above other elements without having to insert markup at the root."}),"\n",(0,a.jsx)(n.li,{children:"Default CSS with light/dark mode available"}),"\n",(0,a.jsx)(n.li,{children:"CSS module support can override internal styles with a custom module."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"demo",children:"Demo"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://npm-library-demo.vercel.app/modal",children:"https://npm-library-demo.vercel.app/modal"})}),"\n",(0,a.jsx)(n.h3,{id:"install",children:"Install"}),"\n",(0,a.jsxs)(l.A,{groupId:"npm2yarn",children:[(0,a.jsx)(s.A,{value:"npm",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install @unleashit/modal\n"})})}),(0,a.jsx)(s.A,{value:"yarn",label:"Yarn",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn add @unleashit/modal\n"})})}),(0,a.jsx)(s.A,{value:"pnpm",label:"pnpm",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pnpm add @unleashit/modal\n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const ModalDemo = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const toggleModal = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  return (\n    <>\n      <p>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam numquam\n        praesentium quisquam repudiandae impedit architecto sapiente consequatur\n        voluptate vitae quis? Pariatur ad fuga fugiat, nostrum ipsa officia\n        eveniet debitis ipsum assumenda labore maiores aspernatur soluta\n        mollitia fugit itaque.\n      </p>\n      <button onClick={toggleModal} type="button">\n        open sesame!\n      </button>\n\n      <Modal\n        size="medium"\n        isOpen={modalOpen}\n        onClose={toggleModal}\n        header="Important Message"\n        footer={() => <footer>Important! Please Read!</footer>}\n        overlayColor="rgba(0,0,0,.8)"\n      >\n        <p>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam\n          numquam praesentium quisquam repudiandae impedit architecto sapiente\n          consequatur voluptate vitae quis? Pariatur ad fuga fugiat.\n        </p>\n        <div>\n          <button type="button" onClick={toggleModal}>\n            OK\n          </button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalDemo;\n'})}),"\n",(0,a.jsx)(n.h3,{id:"css",children:"CSS"}),"\n",(0,a.jsx)(i.Ay,{name:m.title}),"\n",(0,a.jsx)(n.h3,{id:"css-custom-properties",children:"CSS Custom Properties"}),"\n",(0,a.jsx)(r.Ay,{}),"\n",(0,a.jsx)(n.h3,{id:"dark-mode",children:"Dark mode"}),"\n",(0,a.jsx)(d.Ay,{}),"\n",(0,a.jsx)(n.h3,{id:"api",children:"API"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"ModalProps"})})}),"\n",(0,a.jsxs)(n.p,{children:["Props for the modal component. ",(0,a.jsx)(n.code,{children:"isOpen"})," is the only required prop although the modal will be empty unless at least ",(0,a.jsx)(n.code,{children:"children"}),", ",(0,a.jsx)(n.code,{children:"header"})," and/or ",(0,a.jsx)(n.code,{children:"footer"})," are provided."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:"file=./packages/modal/src/modal.tsx start=mdx_modal_props_start end=mdx_modal_props_end",children:"export type OverlayColor =\n  /** Configure both light/dark mode colors */\n  | {\n      light: string;\n      dark: string;\n    }\n  /** One overlay color regardless of light/dark mode */\n  | string\n  /** Transparent overlay */\n  | false;\n\nexport interface ModalProps {\n  /** Modal state */\n  isOpen: boolean;\n  /** Size of the modal, either as a preset or a custom CSS size */\n  size?:\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'full'\n    | `${number}${(typeof cssUnits)[number]}`;\n  /** Handler to close the modal. Use to set the modal state */\n  onClose?: (e?: React.MouseEvent) => void;\n  /** CLose modal on overlay click */\n  closeOnOverlayClick?: boolean;\n  /**\n   * When the modal opens/closes, add animation classes and\n   * preserve the modal in the DOM for the length of a timeout\n   */\n  animationSupport?: boolean;\n  /** Time in milliseconds to keep the modal in the DOM and animation classes active */\n  animationCloseTimeout?: number;\n  /** Custom header component */\n  header?: React.FC<any> | string;\n  /** Custom footer component */\n  footer?: React.FC<any> | string;\n  /** Color of the overlay */\n  overlayColor?: OverlayColor;\n  /** Add a close button to the header */\n  closeBtn?: boolean;\n  /**\n   * Boolean to toggle component's data-theme attribute\n   * between light and dark mode\n   */\n  darkMode?: boolean;\n  /** CSS custom property overrides */\n  cssVars?: CSSVars<typeof varNames>;\n  /** CSS module to target internal styles */\n  cssModule?: Record<string, string>;\n  /** The main content of the modal */\n  children?: React.ReactNode;\n}\n"})})]})}function x(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}}}]);