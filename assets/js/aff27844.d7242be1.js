"use strict";(self.webpackChunk_unleashit_docs=self.webpackChunk_unleashit_docs||[]).push([[827],{7879:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var r=o(5723),n=o(1373);const i={title:"Dark Mode",slug:"/dark-mode",sidebar_position:5},s=void 0,d={id:"dark-mode",title:"Dark Mode",description:"All components except recursive-data-lister and async-handler support dark mode. When using the provided CSS, you just have to set the boolean darkMode prop. Setting the prop toggles an attribute on each component's container called data-theme.",source:"@site/docs/dark-mode.mdx",sourceDirName:".",slug:"/dark-mode",permalink:"/npm-library/dark-mode",draft:!1,unlisted:!1,editUrl:"https://github.com/unleashit/npm-library/tree/master/shared/docs/docs/dark-mode.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Dark Mode",slug:"/dark-mode",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Styling and Theming",permalink:"/npm-library/styling-and-theming"}},a={},l=[];function c(e){const t={admonition:"admonition",code:"code",p:"p",strong:"strong",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["All components except ",(0,r.jsx)(t.strong,{children:"recursive-data-lister"})," and ",(0,r.jsx)(t.strong,{children:"async-handler support"})," dark mode. When using the provided CSS, you just have to set the boolean ",(0,r.jsx)(t.code,{children:"darkMode"})," prop. Setting the prop toggles an attribute on each component's container called ",(0,r.jsx)(t.code,{children:"data-theme"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Note that ",(0,r.jsx)(t.code,{children:"prefers-color-scheme"})," is not queried, so it is up to you to manually set it. This is to give you the flexibility to integrate it with for example a light/dark switch or display the theme of your preference."]}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsx)(t.p,{children:"When using the provided CSS, CSS custom properties each have light and dark mode versions. Don't forget to style both when overriding."})})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);