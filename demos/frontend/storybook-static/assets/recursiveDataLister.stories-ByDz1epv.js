import{j as r}from"./jsx-runtime-CKrituN3.js";import{u as te,a as ae,m}from"./Notes-CLPFxSgn.js";import{r as re}from"./index-CBqU2yxZ.js";import{m as se}from"./mapCSSVarsToStyles-Cs2nQxcE.js";import"./_commonjsHelpers-BosuxZz1.js";const G=6e4,X=36e5;function ne(e,t){const s=(t==null?void 0:t.additionalDigits)??2,a=de(e);let n;if(a.date){const l=ce(a.date,s);n=ue(l.restDateString,l.year)}if(!n||isNaN(n.getTime()))return new Date(NaN);const i=n.getTime();let d=0,c;if(a.time&&(d=me(a.time),isNaN(d)))return new Date(NaN);if(a.timezone){if(c=pe(a.timezone),isNaN(c))return new Date(NaN)}else{const l=new Date(i+d),o=new Date(0);return o.setFullYear(l.getUTCFullYear(),l.getUTCMonth(),l.getUTCDate()),o.setHours(l.getUTCHours(),l.getUTCMinutes(),l.getUTCSeconds(),l.getUTCMilliseconds()),o}return new Date(i+d+c)}const b={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},ie=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,oe=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,le=/^([+-])(\d{2})(?::?(\d{2}))?$/;function de(e){const t={},s=e.split(b.dateTimeDelimiter);let a;if(s.length>2)return t;if(/:/.test(s[0])?a=s[0]:(t.date=s[0],a=s[1],b.timeZoneDelimiter.test(t.date)&&(t.date=e.split(b.timeZoneDelimiter)[0],a=e.substr(t.date.length,e.length))),a){const n=b.timezone.exec(a);n?(t.time=a.replace(n[1],""),t.timezone=n[1]):t.time=a}return t}function ce(e,t){const s=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+t)+"})|(\\d{2}|[+-]\\d{"+(2+t)+"})$)"),a=e.match(s);if(!a)return{year:NaN,restDateString:""};const n=a[1]?parseInt(a[1]):null,i=a[2]?parseInt(a[2]):null;return{year:i===null?n:i*100,restDateString:e.slice((a[1]||a[2]).length)}}function ue(e,t){if(t===null)return new Date(NaN);const s=e.match(ie);if(!s)return new Date(NaN);const a=!!s[4],n=f(s[1]),i=f(s[2])-1,d=f(s[3]),c=f(s[4]),l=f(s[5])-1;if(a)return ye(t,c,l)?fe(t,c,l):new Date(NaN);{const o=new Date(0);return!he(t,i,d)||!ge(t,n)?new Date(NaN):(o.setUTCFullYear(t,i,Math.max(n,d)),o)}}function f(e){return e?parseInt(e):1}function me(e){const t=e.match(oe);if(!t)return NaN;const s=j(t[1]),a=j(t[2]),n=j(t[3]);return ve(s,a,n)?s*X+a*G+n*1e3:NaN}function j(e){return e&&parseFloat(e.replace(",","."))||0}function pe(e){if(e==="Z")return 0;const t=e.match(le);if(!t)return 0;const s=t[1]==="+"?-1:1,a=parseInt(t[2]),n=t[3]&&parseInt(t[3])||0;return Se(a,n)?s*(a*X+n*G):NaN}function fe(e,t,s){const a=new Date(0);a.setUTCFullYear(e,0,4);const n=a.getUTCDay()||7,i=(t-1)*7+s+1-n;return a.setUTCDate(a.getUTCDate()+i),a}const be=[31,null,31,30,31,30,31,31,30,31,30,31];function Q(e){return e%400===0||e%4===0&&e%100!==0}function he(e,t,s){return t>=0&&t<=11&&s>=1&&s<=(be[t]||(Q(e)?29:28))}function ge(e,t){return t>=1&&t<=(Q(e)?366:365)}function ye(e,t,s){return t>=1&&t<=53&&s>=0&&s<=6}function ve(e,t,s){return e===24?t===0&&s===0:s>=0&&s<60&&t>=0&&t<60&&e>=0&&e<25}function Se(e,t){return t>=0&&t<=59}const xe=e=>e==="ul"||e==="ol"?"li":"div",Te=e=>typeof e=="string"||typeof e=="number"||typeof e=="bigint"||typeof e=="boolean",D=e=>typeof e=="object"&&!Array.isArray(e),K=e=>Object.prototype.toString.call(e)==="[object Date]"&&!Number.isNaN(e),De=e=>typeof e=="object"&&!K(e),we=/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:\.\d*)?(?:[-+]\d{2}:?\d{2}|Z)?$/,Ne=e=>typeof e=="string"&&we.test(e),je=(e,t,s)=>K(e)?t(e):s&&Ne(e)?t(ne(e)):e,C=({row:e,parentTag:t,nested:s=!1,branchProp:a,removeRepeatedProp:n,clsName:i,handleISOStringDates:d,dateFormat:c})=>{const l=xe(t);return r.jsx(t,{className:`${i(s?"parent":"topLevelParent")}`,children:Te(e)?r.jsx(l,{className:i("childItem"),children:r.jsx("span",{className:i("value"),children:e})}):Object.keys(e).map(o=>De(e[o])?r.jsxs(l,{className:`${i("childItem")} ${i("branch")} ${D(e[o])?i("objectBranch"):""}`,children:[r.jsx("span",{className:`${i("branchLabel")}${D(e[o])&&a&&e[o][a]?` ${i("arrayBranchLabel")}`:""}`,children:D(e[o])&&a&&e[o][a]?e[o][a]:o}),r.jsx(C,{row:e[o],parentTag:t,clsName:i,branchProp:a,removeRepeatedProp:n,handleISOStringDates:d,dateFormat:c,nested:!0})]},o):s&&a&&o===a&&n?null:r.jsxs(l,{className:i("childItem"),children:[!Array.isArray(e)&&r.jsxs("span",{className:i("label"),children:[o,": "]}),r.jsx("span",{className:i("value"),children:je(e[o],c,d)})]},o))})},Ce=C;C.__docgenInfo={description:"",methods:[],displayName:"Row",props:{row:{required:!0,tsType:{name:"any"},description:""},parentTag:{required:!0,tsType:{name:"JSX.IntrinsicElements"},description:""},nested:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},branchProp:{required:!0,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:""},removeRepeatedProp:{required:!0,tsType:{name:"boolean"},description:""},clsName:{required:!0,tsType:{name:"signature",type:"function",raw:"(camelCaseClassName: string) => string",signature:{arguments:[{type:{name:"string"},name:"camelCaseClassName"}],return:{name:"string"}}},description:""},handleISOStringDates:{required:!0,tsType:{name:"boolean"},description:""},dateFormat:{required:!0,tsType:{name:"signature",type:"function",raw:"(val: Date) => string | number",signature:{arguments:[{type:{name:"Date"},name:"val"}],return:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]}}},description:""}}};const{genClassNames:Re}=te,Pe=["labelColor","labelWeight","valueWeight","valueColor","arrayBranchLabelWeight","levelIndent","bulletColor","listStyleLevel1","listStyleLevel2","listStyleLevel3","listStyleLevel4","listStyleLevel5","listStyleLevel6","listStyleLevel7","topLevelParentBorder"],Ie=()=>Math.random().toString(),w=({data:e,tag:t="ul",multiList:s=!1,arrayBranchProp:a=null,removeRepeatedProp:n=!1,handleISOStringDates:i=!1,dateFormat:d=o=>o.toString(),cssVars:c,cssModule:l})=>{const{clsName:o}=re.useMemo(()=>Re(w.displayName,l),[l]);if(s&&D(e))throw new Error("The provided data must be an array when displayAsList prop is set to true");const R=N=>r.jsx(Ce,{row:N,parentTag:t,branchProp:a,removeRepeatedProp:n,handleISOStringDates:i,dateFormat:d,clsName:o},Ie());return r.jsx("div",{className:o("container"),style:se({cssVars:c,varNames:Pe}),children:s?e.map(N=>R(N)):R(e)})};w.displayName="recursiveDataLister";const ee=w;w.__docgenInfo={description:"",methods:[],displayName:"recursiveDataLister",props:{data:{required:!0,tsType:{name:"union",raw:"Record<string, any> | any[]",elements:[{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"},{name:"Array",elements:[{name:"any"}],raw:"any[]"}]},description:"Array or object of data to display"},tag:{required:!1,tsType:{name:"JSX.IntrinsicElements"},description:"Top level html tag for the list, like ul, ol or div",defaultValue:{value:"'ul'",computed:!1}},multiList:{required:!1,tsType:{name:"boolean"},description:`Display in multiple ul, ol, etc. lists per parent
Data must be an array`,defaultValue:{value:"false",computed:!1}},arrayBranchProp:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:`When a branch is an array of objects, select an object property to be used as a label instead
of the index. Note: this is a global setting, and applies to all child arrays
If the key isn't found, the index will be used anyway`,defaultValue:{value:"null",computed:!1}},removeRepeatedProp:{required:!1,tsType:{name:"boolean"},description:"By default, the arrayBranchProp will be repeated in the list",defaultValue:{value:"false",computed:!1}},handleISOStringDates:{required:!1,tsType:{name:"boolean"},description:`Detect ISO 8601 date strings and convert into Date objects
for the purpose of formatting with the dateFormat prop.
Uses the parseISO function from date-fns`,defaultValue:{value:"false",computed:!1}},dateFormat:{required:!1,tsType:{name:"signature",type:"function",raw:"(val: Date) => string | number",signature:{arguments:[{type:{name:"Date"},name:"val"}],return:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]}}},description:`Function to customize the printed output of date objects
The default is toString()`,defaultValue:{value:"(val: Date) => val.toString()",computed:!1}},cssVars:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  [name in TVarNames[number]]?: CSSProperties[keyof CSSProperties];
}`,signature:{properties:[{key:{name:"varNames[number]",raw:"TVarNames[number]",required:!1},value:{name:"CSSProperties[CSSProperties]",raw:"CSSProperties[keyof CSSProperties]"}}]}},description:"CSS custom property overrides"},cssModule:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"},description:"CSS module to target internal styles"}}};ee.__docgenInfo={description:"",methods:[],displayName:"recursiveDataLister",props:{data:{required:!0,tsType:{name:"union",raw:"Record<string, any> | any[]",elements:[{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"},{name:"Array",elements:[{name:"any"}],raw:"any[]"}]},description:"Array or object of data to display"},tag:{required:!1,tsType:{name:"JSX.IntrinsicElements"},description:"Top level html tag for the list, like ul, ol or div",defaultValue:{value:"'ul'",computed:!1}},multiList:{required:!1,tsType:{name:"boolean"},description:`Display in multiple ul, ol, etc. lists per parent
Data must be an array`,defaultValue:{value:"false",computed:!1}},arrayBranchProp:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:`When a branch is an array of objects, select an object property to be used as a label instead
of the index. Note: this is a global setting, and applies to all child arrays
If the key isn't found, the index will be used anyway`,defaultValue:{value:"null",computed:!1}},removeRepeatedProp:{required:!1,tsType:{name:"boolean"},description:"By default, the arrayBranchProp will be repeated in the list",defaultValue:{value:"false",computed:!1}},handleISOStringDates:{required:!1,tsType:{name:"boolean"},description:`Detect ISO 8601 date strings and convert into Date objects
for the purpose of formatting with the dateFormat prop.
Uses the parseISO function from date-fns`,defaultValue:{value:"false",computed:!1}},dateFormat:{required:!1,tsType:{name:"signature",type:"function",raw:"(val: Date) => string | number",signature:{arguments:[{type:{name:"Date"},name:"val"}],return:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]}}},description:`Function to customize the printed output of date objects
The default is toString()`,defaultValue:{value:"(val: Date) => val.toString()",computed:!1}},cssVars:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  [name in TVarNames[number]]?: CSSProperties[keyof CSSProperties];
}`,signature:{properties:[{key:{name:"varNames[number]",raw:"TVarNames[number]",required:!1},value:{name:"CSSProperties[CSSProperties]",raw:"CSSProperties[keyof CSSProperties]"}}]}},description:"CSS custom property overrides"},cssModule:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"},description:"CSS module to target internal styles"}}};const Le=[{id:"08c13dce-ace1-4cdc-8153-e57fbba0e964",profile:{firstName:"Russ",lastName:"Rohan",age:51,avatar:"https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/329.jpg"},booksRead:[{id:"555f7d31-040c-489b-a543-7dc418855daa",title:"una arceo aurum",author:"Lavern Wiza",revisions:[{id:"4d4c57d3-2f67-494d-a405-75bf610a7717",date:"1983-06-09T06:57:04.551Z",description:"Accusator utrimque attollo aspernatur undique apud vaco dolore."},{id:"2fcd006e-ea95-4f99-bc7b-d14791fc6041",date:"1996-07-03T15:52:45.060Z",description:"Vel cariosus confido sodalitas adulescens carbo virgo cohaero depromo capillus."}]},{id:"fd39425b-8bb7-4091-b439-8efad7d1e7db",title:"totus iure vae",author:"Royce Ruecker",revisions:[{id:"9e412a98-14c6-4ec8-a228-ea75d45e0ef7",date:"2007-08-06T04:23:23.140Z",description:"Culpo turba thorax accusantium volutabrum dignissimos."}]},{id:"46df79a4-85df-4bd8-a852-81216b4b283d",title:"civitas iure aro",author:"Abbie Anderson",revisions:[{id:"764c5f94-b420-449c-8305-ffc2a508ebb6",date:"1977-02-20T08:06:22.709Z",description:"Ter adamo vulgus."},{id:"2ead6069-0c95-46d1-9cae-5e15f2a00bf1",date:"2022-08-15T16:24:25.009Z",description:"Solium aer curia accommodo communis thymum."},{id:"3970f87a-0c03-4bb2-b604-f57951e3c414",date:"1991-01-24T18:40:58.549Z",description:"Amissio calcar veritas tricesimus vivo."}]},{id:"5e534816-97fb-4f20-8796-8223250c2c5b",title:"sui baiulus ago",author:"Genoveva Mueller",revisions:[{id:"122331e3-9b30-40a5-ba67-6e17827ea153",date:"1973-07-10T01:13:13.165Z",description:"Cras consequatur ducimus tabernus tabesco volutabrum convoco."}]}],memberSince:"2019-12-07T11:43:37.422Z"},{id:"540f6454-bce7-4d2f-9a6e-b25cce0571f5",profile:{firstName:"Dasia",lastName:"Tremblay",age:67,avatar:"https://avatars.githubusercontent.com/u/82475367"},booksRead:[{id:"aed26ef6-d0a9-4b77-99d5-25d05807da50",title:"spiculum in audax",author:"Garfield Medhurst",revisions:[{id:"2d774265-ab9c-4d39-9f3e-b982a734db4a",date:"1972-04-05T05:14:43.548Z",description:"Volutabrum doloremque coadunatio exercitationem amita laboriosam."},{id:"f38bef98-36f6-45e7-bd31-9302ba0f76ab",date:"1981-02-09T20:35:53.719Z",description:"Cunctatio perferendis ullam."},{id:"0dcf9672-f9b9-448e-bc43-fef652cb7779",date:"1982-01-03T01:12:25.544Z",description:"Cimentarius creo bellum arto concedo supra caries benevolentia."}]},{id:"596c7d0d-c6f3-42b5-b9ad-2146c4ec539a",title:"thorax verbera spargo",author:"Vivienne West",revisions:[{id:"2d8f9e1c-8e47-46f0-a997-ba2efed0b566",date:"1997-06-19T04:03:05.520Z",description:"Adipisci tabula tenax vacuus facere."}]}],memberSince:"2020-12-03T20:35:18.232Z"},{id:"c1a3cd58-cac8-455c-bf22-12ff07d0bc0e",profile:{firstName:"Milan",lastName:"Predovic",age:16,avatar:"https://avatars.githubusercontent.com/u/36990379"},booksRead:[{id:"bd18b3be-be85-4d65-bd48-8c30d837696f",title:"comptus collum valens",author:"Estell Bergnaum",revisions:[{id:"18e9b5db-a197-4157-8ace-a02a54e0f9e8",date:"2002-05-20T05:13:19.416Z",description:"Agnosco cernuus natus."}]},{id:"c80b1996-a12a-4fb3-9c1d-feb2bb5910df",title:"vicissitudo aegrus laboriosam",author:"Leonora Wintheiser",revisions:[{id:"20a1e6b3-b7d4-4044-8c07-7c57f1a37712",date:"2006-04-21T18:58:58.472Z",description:"Utilis assentator abscido antepono."},{id:"4252298f-075d-4d4e-bb15-56d0d155f610",date:"1999-05-09T08:05:12.027Z",description:"Aut sortitus cedo toties umerus convoco vulgo depulso succedo."},{id:"0c02244c-b9ee-43c8-bdfd-74c4ee4e5339",date:"1977-07-07T03:07:05.156Z",description:"Arca deporto cresco conduco adsum contabesco titulus quo alienus cibo."}]},{id:"2be3761c-c249-4c0b-a014-7131c4e7866b",title:"angelus defluo adsum",author:"Eliseo Farrell",revisions:[{id:"73b9fbf2-e1aa-4a3f-8bf5-a0667616401d",date:"1974-11-01T15:04:18.251Z",description:"Velum vapulus advenio universe aetas magnam varietas thesis infit."}]},{id:"b5928f4e-5d72-4b80-be0c-6a61ad0bfd7d",title:"aduro capitulus blandior",author:"Pearlie Monahan-Dickinson",revisions:[{id:"a1c8126e-852a-48a9-b2ff-73a59b5c9e8c",date:"2002-02-01T19:50:29.399Z",description:"Comitatus cursus ascit."}]}],memberSince:"2021-10-07T07:29:40.275Z"}],ke={id:1,name:"Joe",emails:["joe@shmoe.com","joeshmoe@gmail.com"],posts:[{id:1,title:"Example post 1",created:"2020-05-11T22:02:24.714Z"},{id:2,title:"Example post 2",created:"2022-09-30T13:12:18.714Z"}],created:"2019-11-06T19:14:26.714Z",updated:"2022-09-30T13:12:18.714Z"},u={complex:Le,simple:ke},p={title:"other/Recursive Data Lister",component:ee,tags:["autodocs"],argTypes:{data:{table:{type:{summary:"Record<string, any> | any[]"}}},arrayBranchProp:{table:{type:{summary:"string | null"}},control:{type:"text"}}},args:{data:u.simple},parameters:{notes:ae([r.jsx(r.Fragment,{children:"Recursive Data Lister can output a tree of data with options to format the HTML, optionally show friendly labels in place of array indexes and handle dates"}),r.jsx(r.Fragment,{children:"The top level data structure can be either an array or an object."})])}},h={args:{data:u.simple},parameters:{notes:[p.parameters.notes,m([r.jsx(r.Fragment,{children:"Simple example with default options. Markup is an unordered list and no transformations."})])]}},g={args:{data:u.simple,arrayBranchProp:"title",removeRepeatedProp:!0},parameters:{notes:[p.parameters.notes,m([r.jsxs(r.Fragment,{children:["Same as Simple Raw, but the array indexes are replaced with a field from the list to act as a label. To achieve this,"," ",r.jsx("code",{children:"arrayBranchProp"})," is set to ",r.jsx("b",{children:"title"}),". Then"," ",r.jsx("code",{children:"removeRepeatedProp"})," has been set to ",r.jsx("b",{children:"true"})," which removes the field from the list itself in order to avoid a duplicate."]})])]}},y={args:{data:u.complex},parameters:{notes:[p.parameters.notes,m([r.jsx(r.Fragment,{children:"More complex example with default options. Markup is an unordered list and no transformations."})])]}},v={args:{data:u.complex,arrayBranchProp:"id",removeRepeatedProp:!0},parameters:{notes:[p.parameters.notes,m([r.jsx(r.Fragment,{children:"More complex example with the same options as the Simple Clean example."})])]}},S={args:{data:u.complex,arrayBranchProp:"id",removeRepeatedProp:!0,multiList:!0},parameters:{notes:[p.parameters.notes,m([r.jsxs(r.Fragment,{children:["Simple to Complex Clean example, with ",r.jsx("code",{children:"multilist"})," set to"," ",r.jsx("b",{children:"true"}),". For top-level arrays only, this will output separate html lists per item."]})])]}},x={args:{data:u.complex,arrayBranchProp:"id",removeRepeatedProp:!0,handleISOStringDates:!0,dateFormat:e=>e.toLocaleDateString()},parameters:{notes:[p.parameters.notes,m([r.jsxs(r.Fragment,{children:["By default, ",r.jsx("code",{children:"Date"})," objects will be converted to strings to avoid errors. The default conversion is ",r.jsx("b",{children:"Date.toString()"}),", but can be modified with a ",r.jsx("code",{children:"dateFormat"})," prop."]}),r.jsxs(r.Fragment,{children:["When ",r.jsx("code",{children:"handleISOStringDates"})," is set to ",r.jsx("b",{children:"true"}),", ISO dates in strings will additionally be detected and converted. In this example ISO string dates are detected, converted to Date objects then passed to a supplied formater function."]})])]}},T={args:{data:u.simple,tag:"ol",arrayBranchProp:"title",removeRepeatedProp:!0},parameters:{notes:[p.parameters.notes,m([r.jsxs(r.Fragment,{children:["Simple example with ",r.jsx("code",{children:"tag"})," (HTML element) set to ",r.jsx("b",{children:"ol"})," ","and the ",r.jsx("code",{children:"title"})," field used as the array index label."]}),r.jsx(r.Fragment,{children:"Note that while the tag can only be set globally, with a little CSS it's possible to override the display (bullets, numbers, etc.) at various nesting levels"})])]}};var P,I,L;h.parameters={...h.parameters,docs:{...(P=h.parameters)==null?void 0:P.docs,source:{originalSource:`{
  args: {
    data: dummyData.simple
  },
  parameters: {
    notes: [meta.parameters.notes, makeNotes([<>
          Simple example with default options. Markup is an unordered list and
          no transformations.
        </>])]
  }
}`,...(L=(I=h.parameters)==null?void 0:I.docs)==null?void 0:L.source}}};var k,q,F;g.parameters={...g.parameters,docs:{...(k=g.parameters)==null?void 0:k.docs,source:{originalSource:`{
  args: {
    data: dummyData.simple,
    arrayBranchProp: 'title',
    removeRepeatedProp: true
  },
  parameters: {
    notes: [meta.parameters.notes, makeNotes([<>
          Same as Simple Raw, but the array indexes are replaced with a field
          from the list to act as a label. To achieve this,{' '}
          <code>arrayBranchProp</code> is set to <b>title</b>. Then{' '}
          <code>removeRepeatedProp</code> has been set to <b>true</b> which
          removes the field from the list itself in order to avoid a duplicate.
        </>])]
  }
}`,...(F=(q=g.parameters)==null?void 0:q.docs)==null?void 0:F.source}}};var Z,B,O;y.parameters={...y.parameters,docs:{...(Z=y.parameters)==null?void 0:Z.docs,source:{originalSource:`{
  args: {
    data: dummyData.complex
  },
  parameters: {
    notes: [meta.parameters.notes, makeNotes([<>
          More complex example with default options. Markup is an unordered list
          and no transformations.
        </>])]
  }
}`,...(O=(B=y.parameters)==null?void 0:B.docs)==null?void 0:O.source}}};var M,V,A;v.parameters={...v.parameters,docs:{...(M=v.parameters)==null?void 0:M.docs,source:{originalSource:`{
  args: {
    data: dummyData.complex,
    arrayBranchProp: 'id',
    removeRepeatedProp: true
  },
  parameters: {
    notes: [meta.parameters.notes, makeNotes([<>
          More complex example with the same options as the Simple Clean
          example.
        </>])]
  }
}`,...(A=(V=v.parameters)==null?void 0:V.docs)==null?void 0:A.source}}};var U,W,$;S.parameters={...S.parameters,docs:{...(U=S.parameters)==null?void 0:U.docs,source:{originalSource:`{
  args: {
    data: dummyData.complex,
    arrayBranchProp: 'id',
    removeRepeatedProp: true,
    multiList: true
  },
  parameters: {
    notes: [meta.parameters.notes, makeNotes([<>
          Simple to Complex Clean example, with <code>multilist</code> set to{' '}
          <b>true</b>. For top-level arrays only, this will output separate html
          lists per item.
        </>])]
  }
}`,...($=(W=S.parameters)==null?void 0:W.docs)==null?void 0:$.source}}};var E,z,H;x.parameters={...x.parameters,docs:{...(E=x.parameters)==null?void 0:E.docs,source:{originalSource:`{
  args: {
    data: dummyData.complex,
    arrayBranchProp: 'id',
    removeRepeatedProp: true,
    handleISOStringDates: true,
    dateFormat: val => val.toLocaleDateString()
  },
  parameters: {
    notes: [meta.parameters.notes, makeNotes([<>
          By default, <code>Date</code> objects will be converted to strings to
          avoid errors. The default conversion is <b>Date.toString()</b>, but
          can be modified with a <code>dateFormat</code> prop.
        </>, <>
          When <code>handleISOStringDates</code> is set to <b>true</b>, ISO
          dates in strings will additionally be detected and converted. In this
          example ISO string dates are detected, converted to Date objects then
          passed to a supplied formater function.
        </>])]
  }
}`,...(H=(z=x.parameters)==null?void 0:z.docs)==null?void 0:H.source}}};var _,Y,J;T.parameters={...T.parameters,docs:{...(_=T.parameters)==null?void 0:_.docs,source:{originalSource:`{
  args: {
    data: dummyData.simple,
    tag: 'ol',
    arrayBranchProp: 'title',
    removeRepeatedProp: true
  },
  parameters: {
    notes: [meta.parameters.notes, makeNotes([<>
          Simple example with <code>tag</code> (HTML element) set to <b>ol</b>{' '}
          and the <code>title</code> field used as the array index label.
        </>, <>
          Note that while the tag can only be set globally, with a little CSS
          it's possible to override the display (bullets, numbers, etc.) at
          various nesting levels
        </>])]
  }
}`,...(J=(Y=T.parameters)==null?void 0:Y.docs)==null?void 0:J.source}}};const Me=["SimpleRaw","SimpleClean","ComplexRaw","ComplexClean","MultiList","DateHandling","NumberedList"];export{v as ComplexClean,y as ComplexRaw,x as DateHandling,S as MultiList,T as NumberedList,g as SimpleClean,h as SimpleRaw,Me as __namedExportsOrder,p as default};
